#!/usr/bin/env bash

set -e

dir=${BASH_SOURCE%/*}

tmux_session_name="$1"
if [[ -z "$tmux_session_name" ]]; then
    echo "usage: $(basename "$0") <tmux-session-name>" >&2
    exit 1
fi

source "$dir/../definitions"

for vm_id in {0..6}; do
    vm_inet=$(get_inet "$vm_id")
    "$dir/setup-ssh" "$vm_inet"
done

# Gateway SSH session.
tmux new-session -s "$tmux_session_name" -n "kubenet-ssh-gateway" -d
tmux send-keys -t "$tmux_session_name" "ssh ubuntu@$(get_inet 0) -i $(get_ssh_key_path)" C-m

# Create custom tmux windows for other VM "groups"
ssh_window() {
    local win_name="$1"
    local first_vm_id="$2"
    local last_vm_id="$3"
    local pane_layout="$4"

    tmux new-window -t "$tmux_session_name" -n "$win_name"
    for vm_id in $(seq "$first_vm_id" "$last_vm_id"); do
        tmux send-keys -t "$tmux_session_name" "ssh ubuntu@$(get_inet "$vm_id") -i $(get_ssh_key_path)"  C-m

        if [[ "$vm_id" != "$last_vm_id" ]]; then
            tmux split-window -t "$tmux_session_name" -v
        fi

        tmux select-layout -t "$tmux_session_name" "$pane_layout"
    done
}

# A window with SSH connections to "control" VMs.
ssh_window ssh-controls 1 3 even-vertical

# A window with SSH connections to "worker" VMs.
ssh_window ssh-workers 4 6 even-vertical

# A window with SSH connections to both "control" and "worker" VMs.
ssh_window ssh-all 1 6 tiled
